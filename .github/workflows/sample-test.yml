name: Build, Dockerize, and Deploy to ECS

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build Maven Project and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
          registry-type: private
          skip-logout: false
        env:
          AWS_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.25-9/x64
          JAVA_HOME_11_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.25-9/x64

      - name: Build Java Application
        run: mvn clean package -DskipTests

      - name: Print Environment Variables
        run: printenv

      - name: Build and Push Docker Image
        run: |
          REGION=us-west-2
          IMAGE_NAME=myweb
          REPO_URI=${{ secrets.ECR_REPO_URI }}

          if [ -z "$REPO_URI" ]; then
            echo "REPO_URI is not set"
            exit 1
          fi

          docker build -t $IMAGE_NAME .

          docker tag $IMAGE_NAME:latest $REPO_URI:latest

          docker push $REPO_URI:latest
        env:
          REPO_URI: ${{ secrets.ECR_REPO_URI }}

  deploy:
    name: Deploy to ECS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Update ECS Service
        run: |
          REGION=us-east-1
          CLUSTER_NAME=myweb-cluster
          SERVICE_NAME=tomcatservice
          REPO_URI=${{ secrets.ECR_REPO_URI }}

          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --force-new-deployment \
            --region $REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
